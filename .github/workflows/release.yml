name: Deploy to PyPI

on:
  release:
    types: [ published, edited ]

jobs:
  publish:

    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: |
        python -m pip install pip --upgrade
        pip install poetry
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: poetry update
    - name: Assert Version Correctness
      run: |
        TOML_VER=$(poetry version | awk -F' ' '{ print $2 }')
        echo toml "$TOML_VER"
        GIT_VER=${{ github.event.release.tag_name }}
        echo git "$GIT_VER"
        [[ "$TOML_VER" == "$GIT_VER" ]]
        echo "__version__ = \"$GIT_VER\"" > yellowbox_mssql/_version.py
    - name: build
      run: |
        poetry build

    - name: Mint token
      id: mint
      uses: tschm/token-mint-action@v1.0.3

    - name: Publish the package with poetry
      run: |
        poetry publish -u __token__ -p '${{ steps.mint.outputs.api-token }}'

    - name: Upload Binaries as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: dist
    - name: Upload Binaries to Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true